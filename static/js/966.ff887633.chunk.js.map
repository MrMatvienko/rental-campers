{"version":3,"file":"static/js/966.ff887633.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/componets/CamperList/CamperItem/CamperItem.module.css?a851","componets/CamperList/CamperItem/CamperItem.jsx","webpack://react-homework-template/./src/pages/Favorites/Favorites.module.css?54b5","pages/Favorites/Favorites.jsx","redux/campers/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"itemContainer\":\"CamperItem_itemContainer__BZhAI\",\"imageItem\":\"CamperItem_imageItem__iTsqN\",\"infoContainer\":\"CamperItem_infoContainer__EsCOl\",\"info1\":\"CamperItem_info1__QTYpV\",\"fistLineInfo\":\"CamperItem_fistLineInfo__hLMCp\",\"priceHeart\":\"CamperItem_priceHeart__CUZno\",\"icon\":\"CamperItem_icon__M+sBW\",\"info2\":\"CamperItem_info2__D2FQx\",\"description\":\"CamperItem_description__45elE\",\"listDateils\":\"CamperItem_listDateils__sluuw\",\"camperDetailsItem\":\"CamperItem_camperDetailsItem__icu00\",\"iconList\":\"CamperItem_iconList__e-CHF\",\"showBtn\":\"CamperItem_showBtn__Bl4ME\"};","import CSS from './CamperItem.module.css';\nimport sprite from '../../../assets/images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addToFavorites,\n  removeFromFavorites,\n} from '../../../redux/campers/slice';\nconst CamperItem = ({ camper, toggleModal }) => {\n  const [heartColor, setHeartColor] = useState('#FFFFFF');\n  const dispatch = useDispatch();\n  const favorites = useSelector(state => state.camper.favorites);\n\n  const firstImage = camper.gallery[0];\n  const text = camper.description.split(' ').slice(0, 11).join(' ');\n\n  useEffect(() => {\n    const savedHeartColor = localStorage.getItem(`${camper._id}`);\n    if (savedHeartColor) {\n      setHeartColor(savedHeartColor);\n    }\n    const isFavorite = favorites.some(item => item._id === camper._id);\n    if (isFavorite) {\n      setHeartColor('#FF0000');\n    }\n  }, [camper._id, favorites]);\n\n  const handleHeartClick = () => {\n    const newColor = heartColor === '#FF0000' ? '#FFFFFF' : '#FF0000';\n    setHeartColor(newColor);\n    localStorage.setItem(`${camper._id}`, newColor);\n    if (newColor === '#FF0000') {\n      dispatch(addToFavorites(camper));\n    } else {\n      dispatch(removeFromFavorites(camper));\n    }\n  };\n  const isFavorite = favorites.some(item => item._id === camper._id);\n  return (\n    <div className={CSS.itemContainer}>\n      <img className={CSS.imageItem} src={firstImage} alt=\"Camper\" />\n      <div className={CSS.infoContainer}>\n        <div className={CSS.info1}>\n          <p className={CSS.fistLineInfo}>{camper.name}</p>\n          <div className={CSS.priceHeart}>\n            <p className={CSS.fistLineInfo}>â‚¬{camper.price}.00</p>\n            <svg\n              className={CSS.icon}\n              onClick={handleHeartClick}\n              fill={isFavorite ? '#FF0000' : '#FFFFFF'}\n            >\n              <use href={sprite + '#icon-heart'} />\n            </svg>\n          </div>\n        </div>\n        <div className={CSS.info2}>\n          <svg\n            className={CSS.icon}\n            style={{ width: '14px', fill: 'var(--rating)' }}\n          >\n            <use href={sprite + '#icon-star'} />\n          </svg>\n          <p>{camper.rating}</p>\n          <p>({camper.reviews.length} Reviews)</p>\n          <svg style={{ marginLeft: '16px' }} className={CSS.iconList}>\n            <use href={sprite + '#icon-map-pin'} />\n          </svg>\n          <p>{camper.location}</p>\n        </div>\n        <p className={CSS.description}>{text}...</p>\n        <ul className={CSS.listDateils}>\n          <li className={CSS.camperDetailsItem}>\n            <svg className={CSS.iconList}>\n              <use href={sprite + '#icon-people'} />\n            </svg>\n            {camper.adults} adults\n          </li>\n          <li className={CSS.camperDetailsItem}>\n            <svg className={CSS.iconList}>\n              <use href={sprite + '#icon-at'} />\n            </svg>\n            {camper.transmission.charAt(0).toUpperCase() +\n              camper.transmission.substring(1)}\n          </li>\n          <li className={CSS.camperDetailsItem}>\n            <svg className={CSS.iconList}>\n              <use href={sprite + '#icon-oil'} />\n            </svg>\n            {camper.engine.charAt(0).toUpperCase() + camper.engine.substring(1)}\n          </li>\n          {camper.details.kitchen === 1 && (\n            <li className={CSS.camperDetailsItem}>\n              <svg className={CSS.iconList}>\n                <use href={sprite + '#icon-kitchen'} />\n              </svg>\n              Kitchen\n            </li>\n          )}\n          {camper.details.beds > 0 && (\n            <li className={CSS.camperDetailsItem}>\n              <svg className={CSS.iconList}>\n                <use href={sprite + '#icon-bed'} />\n              </svg>\n              {camper.details.beds} beds\n            </li>\n          )}\n          {camper.details.TV === 1 && (\n            <li className={CSS.camperDetailsItem}>\n              <svg className={CSS.iconList}>\n                <use href={sprite + '#icon-tv'} />\n              </svg>\n              TV\n            </li>\n          )}\n          {camper.details.airConditioner === 1 && (\n            <li className={CSS.camperDetailsItem}>\n              <svg className={CSS.iconList}>\n                <use href={sprite + '#icon-ac'} />\n              </svg>\n              AC{' '}\n            </li>\n          )}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={() => toggleModal(camper)}\n          className={CSS.showBtn}\n        >\n          Show more\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default CamperItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"favoritesContainer\":\"Favorites_favoritesContainer__14CAa\",\"text\":\"Favorites_text__k8lVp\"};","import CamperItem from 'componets/CamperList/CamperItem/CamperItem';\nimport { useSelector } from 'react-redux';\nimport { selectFavorites } from '../../redux/campers/selectors';\nimport CSS from './Favorites.module.css';\nconst Favorites = () => {\n  const favorites = useSelector(selectFavorites);\n\n  return (\n    <div className={CSS.favoritesContainer}>\n      <h2>Favorites camper</h2>\n      {favorites.length === 0 ? (\n        <p className={CSS.text}>Your favorites list is empty...</p>\n      ) : (\n        <div>\n          {favorites.map(camper => (\n            <CamperItem key={camper._id} camper={camper} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Favorites;\n","export const selectCamperData = state => state.camper.camperData;\nexport const selectFavorites = state => state.camper.favorites;\nexport const selectFilterData = state => state.camper.filters;\n"],"names":["_ref","camper","toggleModal","_useState","useState","_useState2","_slicedToArray","heartColor","setHeartColor","dispatch","useDispatch","favorites","useSelector","state","firstImage","gallery","text","description","split","slice","join","useEffect","savedHeartColor","localStorage","getItem","concat","_id","some","item","isFavorite","_jsxs","className","CSS","children","_jsx","src","alt","name","price","onClick","newColor","setItem","addToFavorites","removeFromFavorites","fill","href","sprite","style","width","rating","reviews","length","marginLeft","location","adults","transmission","charAt","toUpperCase","substring","engine","details","kitchen","beds","TV","airConditioner","type","selectFavorites","map","CamperItem","selectCamperData","camperData"],"sourceRoot":""}